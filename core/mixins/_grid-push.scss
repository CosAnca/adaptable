@charset "UTF-8";

@use "sass:list";
@use "sass:math";
@use "../functions/adaptable-column-width";
@use "../functions/adaptable-layout-direction";
@use "../functions/retrieve-adaptable-settings";
@use "../settings/settings";

/// Push or pull a grid column by manipulating its left margin.
///
/// @group features
///
/// @name Grid push
///
/// @argument {number (unitless)} $push [false]
///   The number of columns to push the column.
///
/// @argument {map} $grid [$adaptable-grid]
///   The grid to be used to determine how far to push the column.
///   By default, the global `$adaptable-grid` will be used.
///
/// @example scss
///
///   .element {
///     @include grid-push(3);
///   }
///
/// @example css
///
///   .element {
///     margin-left: calc(25% - 1.5rem + 2.25rem);
///   }
///

@mixin grid-push($push: false, $grid: settings.$adaptable-grid) {
  $_mode: retrieve-adaptable-settings.retrieve-adaptable-setting($grid, mode);
  $_grid-columns: retrieve-adaptable-settings.retrieve-adaptable-setting(
    $grid,
    columns
  );
  $_grid-column-gap: retrieve-adaptable-settings.retrieve-adaptable-setting(
    $grid,
    column-gap
  );

  @if ($_mode and $_mode == "flex") {
    @if $push {
      $_column-gap-affordance: ($_grid-column-gap * 2) -
        (math.div($_grid-column-gap, 2));
      $_margin-value: calc(
        #{adaptable-column-width.adaptable-column-width($grid, $push)} +
          #{$_column-gap-affordance}
      );

      margin-#{adaptable-layout-direction.adaptable-layout-direction($grid)}: $_margin-value;
    } @else {
      $_margin-value: retrieve-adaptable-settings.retrieve-adaptable-setting(
        $grid,
        column-gap
      );

      margin-#{adaptable-layout-direction.adaptable-layout-direction($grid)}: $_margin-value;
    }
  } @else {
    @warn "`grid-push` may have undesired behaviour with `mode: \"grid\"`.\ We recommend using `grid-column-start` mixin instead.";
    @if $push {
      $_column-start: list.nth($push, 1) + 1;

      grid-column-start: $_column-start;
    } @else {
      grid-column-start: auto;
    }
  }
}
