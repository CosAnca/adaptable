@charset "UTF-8";
/// `grid-media` allows you to change your layout based on a media query.
/// For example, an object can span 3 columns on small screens and 6 columns
/// on large screens.
///
/// This mixin is a wrapper around Sass-MQ's Media Query mixin.
/// https://github.com/sass-mq/sass-mq/blob/master/_mq.scss#L121
///
/// @group features
///
/// @name Grid media
///
/// @argument {String | Boolean} $from [false] - One of $adaptable-breakpoints
/// @argument {String | Boolean} $until [false] - One of $adaptable-breakpoints
/// @argument {String | Boolean} $and [false] - Additional media query parameters
/// @argument {String} $media-type [$mq-media-type] - Media type: all, screen, print...
/// @argument {Map} $breakpoints [$adaptable-breakpoints] - Contains all your breakpoints
///
/// @example scss
///
///   $adaptable-breakpoints: (
///     medium: 480px,
///     large: 960px,
///     x-large: 1300px
///   );
///
///   .element {
///     @include grid-media($from: medium) {
///       color: red;
///     }
///     @include grid-media($until: large) {
///       color: blue;
///     }
///     @include grid-media(medium, large) {
///       color: green;
///     }
///   }
///
/// @example css
///
///   @media (min-width: 30em) {
///     .element {
///       color: red;
///     }
///   }
///
///   @media (max-width: 60em) {
///     .element {
///       color: blue;
///     }
///   }
///
///   @media (min-width: 30em) and (max-width: 60em) {
///     .element {
///       color: green;
///     }
///   }
///

@mixin grid-media(
  $from: false,
  $until: false,
  $and: false,
  $media-type: $mq-media-type,
  $breakpoints: $adaptable-breakpoints
) {
  @warn "\aThe `grid-media` mixin will be deprecated in a future version of Adaptable in favour of SassMQ.\a Add SassMQ into your project and use `@include mq` instead of `@include grid-media`\a Find more about SassMQ at https://github.com/sass-mq/sass-mq";
  @include mq(
    $from: $from,
    $until: $until,
    $and: $and,
    $media-type: $media-type,
    $breakpoints: $breakpoints,
    $responsive: $mq-responsive,
    $static-breakpoint: $mq-static-breakpoint
  ) {
    @content;
  }
}
