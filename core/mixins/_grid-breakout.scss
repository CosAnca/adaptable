@charset "UTF-8";
/// Creates negative x-margins by the specified number of columns.
/// Useful to break out of a parent grid.
///
/// @group features
///
/// @name Grid breakout
///
/// @argument {number (unitless)} $columns [null]
///   Specifies the number of columns an element should breakout based on the total
///   columns of the grid.
///
///   This can also be defined in a shorthand syntaxt which also contains the
///   total column count such as `3 of 5`.
///
/// @argument {map} $grid [$adaptable-grid]
///   The grid to be used to generate the column.
///   By default, the global `$adaptable-grid` will be used.
///
/// @example scss
///
///   .element {
///     @include grid-breakout(1 of 8);
///   }
///
/// @example css
///
///   .element {
///     min-width: 100%;
///     margin-right: calc(-12.5% - 1.6875rem + 1.5rem);
///     margin-left: calc(-12.5% - 1.6875rem + 1.5rem);
///   }
///

@mixin grid-breakout($columns: null, $grid: $adaptable-grid) {
  $columns: _adaptable-column-default($grid, $columns);
  $column-width: _adaptable-column-width($grid, $columns);
  $_grid-gutter: _retrieve-adaptable-setting($grid, gutter);

  min-width: 100%;
  margin-right: calc(-#{$column-width} + #{$_grid-gutter});
  margin-left: calc(-#{$column-width} + #{$_grid-gutter});
}
